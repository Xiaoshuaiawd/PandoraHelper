name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - '*'  # 当推送 Tag 时触发
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64, arm]
        goarm: [7]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: arm
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install Go dependencies
      run: |
        go env -w GO111MODULE=on
        go mod tidy
        go mod download

    - name: Install UPX and zip
      run: sudo apt-get install -y upx-ucl zip

    - name: Build binary
      run: |
        mkdir -p builds/PandoraHelper-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}
        mkdir -p builds/PandoraHelper-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}/data
        
        # 设置输出文件名
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="PandoraHelper.exe"
        else
          BINARY_NAME="PandoraHelper"
        fi
        
        # 构建二进制文件
        if [ "${{ matrix.goarch }}" = "arm" ]; then
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} GOARM=${{ matrix.goarm }} go build -ldflags="-s -w" -o builds/PandoraHelper-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}/${BINARY_NAME} ./cmd/server/main.go
        else
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -o builds/PandoraHelper-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}/${BINARY_NAME} ./cmd/server/main.go
        fi
        
        # UPX压缩（跳过Windows ARM架构）
        if [ "${{ matrix.goos }}" != "windows" ] || [ "${{ matrix.goarch }}" != "arm" ]; then
          upx builds/PandoraHelper-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}/${BINARY_NAME}
        fi
        
        # 复制配置文件
        cp -r data/config.json builds/PandoraHelper-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}/data/

    - name: Compress binaries
      run: |
        cd builds
        zip -r PandoraHelper-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip PandoraHelper-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: PandoraHelper-${{ matrix.goos }}-${{ matrix.goarch }}
        path: builds/*.zip
        retention-days: 1

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: builds

    - name: Prepare artifacts for release
      run: |
        mkdir -p release
        find builds -name "*.zip" -exec cp {} release/ \;

    - name: Check artifacts
      run: |
        if [ ! -d "release" ] || [ -z "$(ls -A release)" ]; then
          echo "Error: No artifacts found in release directory"
          exit 1
        fi
        echo "Found the following artifacts:"
        ls -la release/

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1.14.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        artifacts: "release/*.zip"
        allowUpdates: true
        draft: false
        prerelease: false
        generateReleaseNotes: true
        body: |
          ## PandoraHelper Release ${{ github.ref_name }}
          
          ### 支持的平台:
          - Windows (amd64)
          - Linux (amd64/arm64/arm)
          - macOS (amd64)
          
          ### 安装说明
          1. 下载对应您系统的压缩包
          2. 解压到任意目录
          3. 运行PandoraHelper可执行文件
          
          ### 注意事项
          - 首次运行请检查data目录下的config.json配置文件
          - 如遇问题请提交issue反馈
